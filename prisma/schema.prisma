// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MaintenanceData {
  id String @id @default(cuid())

  // Unit id reference of separate service 
  unitInstanceId String?

  currentSmr  Int
  serviceDate DateTime
  notes       String
  details     MaintenanceDetail[]
  evidences   MaintenanceEvidence[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("maintenance_info")
}

model MaintenanceDetail {
  id String @id @default(cuid())

  hours         Int
  maintenanceId String
  maintenance   MaintenanceData @relation(fields: [maintenanceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("maintenance_detail")
}

model MaintenanceEvidence {
  id String @id @default(cuid())

  mediaId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  MaintenanceData   MaintenanceData? @relation(fields: [maintenanceDataId], references: [id])
  maintenanceDataId String?

  @@map("maintenance_evidence")
}

model SparePart {
  id String @id @default(cuid())

  // Unit id reference of separate service 
  unitId String?

  name       String
  category   String
  partNumber String
  startPrice Int
  endPrice   Int
  mediaId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("spare_parts")
}
